plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'com.netflix.dgs.codegen' version '5.6.9'
}

group = 'com.gradelcourse'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:latest.release"))
    implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter"
    implementation 'com.graphql-java:graphql-java-extended-scalars:20.2'
    implementation 'org.apache.commons:commons-lang3:3.13.0'

    implementation 'net.datafaker:datafaker:2.0.1'
}


tasks.named('test') {
    useJUnitPlatform()
}

generateJava{
    schemaPaths = ["${projectDir}/src/main/resources/schema"] // List of directories containing schema files
    packageName = 'com.gradelcourse.gradelgraphql.generated' // The package name to use to generate sources
}